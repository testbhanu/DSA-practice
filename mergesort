package practiceautomate123;

import java.util.Arrays;

public class Mergesort {

    public static void sort(int[] arr) {
        if (arr.length < 2) {
            return;
        }
        int middle = arr.length / 2;
        int[] left = new int[middle];
        int[] right = new int[arr.length - middle];

        // Copy elements to left and right subarrays
        for (int i = 0; i < middle; i++) {
            left[i] = arr[i];
        }
        for (int i = middle; i < arr.length; i++) {
            right[i - middle] = arr[i];
        }

        // Recursive calls to sort the subarrays
        sort(left);
        sort(right);

        // Merge the sorted subarrays
        merge(left, right, arr);
    }

    public static void merge(int[] left, int[] right, int[] arr) {
        int i = 0, j = 0, k = 0;

        // Merging logic
        while (i < left.length && j < right.length) {
            if (left[i] <= right[j]) {
                arr[k++] = left[i++];
            } else {
                arr[k++] = right[j++];
            }
        }

        // Copy remaining elements of left array
        while (i < left.length) {
            arr[k++] = left[i++];
        }

        // Copy remaining elements of right array
        while (j < right.length) {
            arr[k++] = right[j++];
        }
    }

    public static void main(String[] args) {
        int arr[] = {4, 1, 2, 7, 9};
        sort(arr);
        System.out.println(Arrays.toString(arr));
    }
}
